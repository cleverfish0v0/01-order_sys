"""
Django settings for order_sys project.

Generated by 'django-admin startproject' using Django 3.2.

For more information on this file, see
https://docs.djangoproject.com/en/3.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.2/ref/settings/
"""

from pathlib import Path

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-cr*dyp2tmss6)!pdvr!fl99(6db(f7-m^(ju6n=(h25n!)yrd+'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []

# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    # message组件，第一个位置
    'django.contrib.messages',
    'django.contrib.staticfiles',
    # 注册app
    'web.apps.WebConfig'
]

# 中间件按照顺序执行
MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    # message中间件，第二个位置，进来和出去
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    # 不能放到session上面，因为要用到session中间件
    'utils.md.AuthMiddleware'
]

ROOT_URLCONF = 'order_sys.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                # message，模版中读取message页面，第三个位置
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'order_sys.wsgi.application'

# Database
# https://docs.djangoproject.com/en/3.2/ref/settings/#databases

# 数据库连接
DATABASES = {
}

# Password validation
# https://docs.djangoproject.com/en/3.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

# Internationalization
# https://docs.djangoproject.com/en/3.2/topics/i18n/

# LANGUAGE_CODE = 'en-us'
# 报错切换为中文
LANGUAGE_CODE = 'zh-hans'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.2/howto/static-files/

STATIC_URL = '/static/'

# Default primary key field type
# https://docs.djangoproject.com/en/3.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

CACHES = {

}

# SESSION_ENGINE = "django.contrib.session.backends.cache"
SESSION_ENGINE = ''
SESSION_CACHE_ALIAS = ""

from django.conf import global_settings

# ################ 自定义配置 ###############
# 首页设置
HOME_PAGE = "/home/"
NB_SESSION_KEY = "user_info"
# 登入页面
NB_LOGIN_URL = "/login/"
# 　无需登入即可访问的页面
NB_WHITE_URL = ['/login/', '/email/login/', '/email/send/']

# 权限管理,角色与菜单
NB_MENU = {
    "ADMIN": [
        {
            'text': "用户信息",
            'icon': 'fa-solid fa-face-smile',
            'children': [
                {'text': "级别管理", "url": "/level/list/", "name": "level_list"},
                {'text': "用户管理", "url": "/customer/list/", "name": "customer_list"},
                {'text': '价格策略', "url": "/policy/list/", "name": "policy_list"}
            ],
        },
    ],
    "CUSTOMER": [
        {
            'text': "订单中心",
            'icon': 'fal fa-money-check-edit',
            'children': [
                {'text': "我的订单", "url": "/my/order/list/", "name": "my_order_list"},
                {'text': "我的交易记录", "url": "/my/transaction/list/", "name": "my_transaction_list"},
            ],
        }
    ]
}

# 总权限列表
NB_PERMISSION = {
    "ADMIN": {
        # 级别管理
        "level_list": {'text': '等级管理', 'parent': None},
        "level_add": {'text': '添加级别', 'parent': 'level_list'},
        "level_edit": {'text': '编辑级别', 'parent': 'level_list'},
        "level_delete": {'text': '删除级别', 'parent': 'level_list'},
        # 用户管理
        "customer_list": {'text': '客户管理', 'parent': None},
        "customer_add": {'text': '添加客户', 'parent': "customer_list"},
        "customer_edit": {'text': '编辑客户', 'parent': "customer_list"},
        "customer_reset": {'text': '编辑密码', 'parent': "customer_list"},
        "customer_delete": {'text': '删除用户', 'parent': "customer_list"},
        "customer_charge": {'text': '我的交易记录', 'parent': "customer_list"},
        "customer_charge_add": {'text': '添加交易记录', 'parent': "customer_list"},
        # 价格策略
        "policy_list": {'text': '价格策略', 'parent': None},
        "policy_add": {'text': '创建价格策略', 'parent': None},
        "policy_edit": {'text': '编辑价格策略', 'parent': None},
        "policy_delete": {'text': '删除价格策略', 'parent': None},
    },
    "CUSTOMER": {
        "my_order_list": {'text': '我的订单', 'parent': None},
        "my_order_list_add": {'text': '添加订单', 'parent': "my_order_list"},
        "my_order_list_cancel": {'text': '撤单', 'parent': "my_order_list"},
        "my_transaction_list": {'text': '我的交易记录', 'parent': None},
    }
}

# 用于判断菜单公共权限、43
NB_PERMISSION_PUBLIC = {
    'home': {'text': "主页", 'parent': None},
    'logout': {'text': '注销', 'parent': None}
}

# 订单队列的名字
QUEUE_TASK_NAME = 'YANG_TASK_QUEUE'
# 四个位置，存储的位置
MESSAGE_STORAGE = 'django.contrib.messages.storage.session.SessionStorage'


try:
    from .local_settings import *
except Exception as e:

    pass